# For full documentation of the configuration options please
# see: https://github.com/golangci/golangci-lint#config-file.

# options for analysis running
run:
  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 1m

  # list of build tags, all linters use it. Default is empty list.
  # build-tags:
  #   - <build-tag>

  # which dirs to skip: they won't be analyzed;
  # can use regexp here: generated.*, regexp is applied on full path;
  # default value is empty list, but next dirs are always skipped independently
  # from this option's value:
  #   	vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  # skip-dirs:
  #   - <pattern>

  # which files to skip: they will be analyzed, but issues from them
  # won't be reported. Default value is empty list, but there is
  # no need to include all autogenerated files, we confidently recognize
  # autogenerated files. If it's not please let us know.
  # skip-files:
  #   - <pattern>

linters:
  # We explicitly enable only specific linters to ensure deterministic behaviour
  disable-all: true
  enable:
    - asciicheck
    - bidichk
    - containedctx
    - contextcheck
    - copyloopvar
    - cyclop
    - dupl
    - dupword
    - durationcheck
    - err113
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustive
    - funlen
    - gci
    - gochecknoglobals
    - gochecknoinits
    - gochecksumtype
    - goconst
    - gocritic
    - godot
    - gofumpt
    - goimports
    - gosimple
    - govet
    - inamedparam
    - ineffassign
    - interfacebloat
    - intrange
    - loggercheck
    - maintidx
    - makezero
    - mirror
    - misspell
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - nolintlint
    - nonamedreturns
    - paralleltest
    - predeclared
    - reassign
    - staticcheck
    - tagalign
    - tagliatelle
    - tenv
    - testifylint
    - thelper
    - tparallel
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - whitespace

linters-settings:
  copyloopvar:
    check-alias: true

  cyclop:
    max-complexity: 15

  dupl:
    threshold: 100

  exhaustive:
    check:
      - switch
      - map

  funlen:
    ignore-comments: true

  gci:
    custom-order: true
    sections:
      - standard
      - default
      - localmodule

  goconst:
    min-len: 6
    min-occurrences: 5

  gocritic:
    # We explicitly enable only specific linters to ensure deterministic behaviour
    # List of available checks:
    # https://github.com/go-critic/go-critic/blob/master/docs/overview.md
    disable-all: true
    enabled-checks:
      # "diagnostic" checkers
      - appendAssign
      - argOrder
      - badCall
      - badCond
      - badSorting
      - caseOrder
      - codegenComment
      - commentedOutCode
      - deferInLoop
      - deprecatedComment
      - dupArg
      - dupBranchBody
      - dupCase
      - dupSubExpr
      - emptyDecl
      - evalOrder
      - exitAfterDefer
      - flagDeref
      - flagName
      - mapKey
      - nilValReturn
      - offBy1
      - sloppyLen
      - sloppyTypeAssert
      - sprintfQuotedString
      - uncheckedInlineErr
      - unnecessaryDefer
      # "style" checkers
      - assignOp
      - boolExprSimplify
      - captLocal
      - commentFormatting
      - commentedOutImport
      - defaultCaseOrder
      - deferUnlambda
      - dupImport
      - elseif
      - emptyFallthrough
      - emptyStringTest
      - hexLiteral
      - importShadow
      - initClause
      - methodExprCall
      - nestingReduce
      - newDeref
      - octalLiteral
      - preferFilepathJoin
      - ptrToRefParam
      - redundantSprint
      - regexpMust
      - singleCaseSwitch
      - stringConcatSimplify
      - switchTrue
      - timeExprSimplify
      - tooManyResultsChecker
      - typeAssertChain
      - typeDefFirst
      - typeSwitchVar
      - typeUnparen
      - underef
      - unlabelStmt
      - unlambda
      - unnecessaryBlock
      - unslice
      - valSwap
      # "performance" checkers
      - appendCombine
      - equalFold
      - indexAlloc
      - preferFprint
      - preferStringWriter
      - rangeValCopy
      - sliceClear
      - stringXbytes
    settings:
      commentedOutCode:
        minLength: 5
      tooManyResultsChecker:
        maxResults: 3

  godot:
    scope: all

  gofumpt:
    extra-rules: true

  goimports:
    local-prefixes: github.com/Helcaraxan/toolshare

  govet:
    enable:
      - shadow
    settings:
      shadow:
        strict: true

  misspell:
    locale: UK

  nakedret:
    max-func-lines: 0

  nolintlint:
    require-explanation: true
    require-specific: true

  tagliatelle:
    case:
      rules:
        json: snake
        yaml: snake

  unparam:
    # We assume that the toolshare repo is not intended to be used as a library for now.
    check-exported: true

# rules to deal with reported isues
issues:
  # List of regexps of issue texts to exclude, empty list by default.
  # But independently from this option we use default exclude patterns,
  # it can be disabled by `exclude-use-default: false`. To list all
  # excluded by default patterns execute `golangci-lint run --help`
  # exclude:
  #   - <pattern>

  exclude-rules:
    - path: \.go$
      text: color  # Triggered by imports of github.com/fatih/color.
      linters:
        - misspell
    - path: \.go$
      text: err
      linters:
        - govet
    - path: \.go$
      text: ok
      linters:
        - govet

  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0
